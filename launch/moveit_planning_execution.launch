<launch>
    <!-- The planning and execution components of MoveIt! configured to run -->
    <!-- using the ROS-Industrial interface. -->

    <!-- |      PARAMETERS          | -->

    <!-- the "sim" argument controls whether we connect to a Simulated or Real robot. -->
    <arg name="sim" default="false" doc="If true, the robot will be simulated in Gazebo" />

    <!-- specify the planning pipeline -->
    <arg name="pipeline" default="ompl" />

    <!-- By default, we do not start a database (it can be large) -->
    <arg name="db" default="false" />
    <!-- Allow user to specify database location -->
    <arg name="db_path" default="$(find qb_hand_moveit_config)/default_warehouse_mongo_db" />

    <!-- By default, we are not in debug mode -->
    <arg name="debug" default="false" />

    <!-- By default, we will load or override the robot_description -->
    <arg name="load_robot_description" default="true"/>

    <!-- Set execution mode for fake execution controllers -->
    <arg name="execution_type" default="interpolate" />

    <!-- Choose whether or not to use gui -->
    <arg name="use_gui" default="false" />

    <!-- Choose whether or not to use rviz -->
    <arg name="use_rviz" default="true" />

    <!-- The unique robot name -->
    <arg name="robot_name" default="qbhand" doc="The unique robot name." />

    <!-- FIXME: hardcode, in order to ensure that the joint name `$(arg device_name)_synergy_joint` is same as some files in MoveIt!, -->
    <!-- which use a lot of hardcode (`device_name` is fixed as qbhand, such as qbhand_base_link) -->
    <arg name="device_name" value="qbhand" doc="The unique device name used in the yaml controller configurations (also in the urdf if not already specified there)." />

    <arg name="robot_package" default="qb_hand" doc="The base package name prefix for the robot configurations [urdf, rviz, ...]."/>

    <arg name="robot_namespace" default="$(arg device_name)" doc="The unique robot namespace."/>

    <arg name="source_list" default="[control/joint_states]" doc="The joint_states source list for the joint_state_publisher."/>

    <arg name="frequency" default="100" doc="The frequency of the two state publishers."/>

    <arg name="use_controller_gui" default="false" doc="Choose whether or not to use the controller GUI."/>

    <arg name="use_interactive_markers" default="false" doc="Choose whether or not to use interactive markers on rviz."/>

    <arg name="use_waypoints" default="false" doc="Choose whether or not to use the waypoint references."/>

    <!-- If needed, broadcast static tf for robot root -->

    <!-- Bringup qbhand driver -->
    <include file="$(find qb_hand_moveit_config)/launch/qbhand_bringup/qbhand_bringup.launch" unless="$(arg sim)">
        <arg name="device_name" value="$(arg device_name)" />
        <arg name="robot_namespace" value="$(arg robot_namespace)" />
    </include>

    <!-- Working with the real robot.  -->
    <group ns="$(arg robot_namespace)" unless="$(arg sim)">

        <!-- node `robot_state_publisher` and `move_group` subscribe topic `/joint_states`, but actually we have `control/joint_states` -->
        <remap from="joint_states" to="control/joint_states"/>

        <!-- Given the published joint states, publish tf for the robot links -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
 
        <!-- set up control addons (gui, waypoint, ...) -->
        <include file="$(find qb_device_bringup)/launch/robot_opt_bringup.launch">
          <arg name="robot_name" value="$(arg robot_name)"/>
          <arg name="robot_package" value="$(arg robot_package)"/>
          <arg name="use_controller_gui" value="$(arg use_controller_gui)"/>
          <arg name="use_interactive_markers" value="$(arg use_interactive_markers)"/>
          <arg name="use_waypoints" value="$(arg use_waypoints)"/>
        </include>

        <!-- Run the main MoveIt! executable without trajectory execution (we do not have controllers configured by default) -->
        <include file="$(find qb_hand_moveit_config)/launch/move_group.launch">
            <arg name="allow_trajectory_execution" value="true"/>
            <arg name="fake_execution" value="false"/>
            <arg name="execution_type" value="$(arg execution_type)"/>
            <arg name="info" value="true"/>
            <arg name="debug" value="$(arg debug)"/>
            <arg name="pipeline" value="$(arg pipeline)"/>
            <arg name="load_robot_description" value="$(arg load_robot_description)"/>
            <arg name="device_name" value="$(arg device_name)"/>
            <arg name="robot_namespace" value="$(arg robot_namespace)"/>
        </include>

        <!-- Run Rviz and load the default config to see the state of the move_group node -->
        <include file="$(find qb_hand_moveit_config)/launch/moveit_rviz.launch" if="$(arg use_rviz)">
            <arg name="rviz_config" value="$(find qb_hand_moveit_config)/launch/moveit.rviz"/>
            <arg name="debug" value="$(arg debug)"/>
        </include>

        <!-- If database loading was enabled, start mongodb as well -->
        <include file="$(find qb_hand_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)">
            <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
        </include>
    </group>

    <!-- Run the robot within a Gazebo simulation. -->
    <group if="$(arg sim)">
        <!-- TODO -->
    </group>

</launch>
