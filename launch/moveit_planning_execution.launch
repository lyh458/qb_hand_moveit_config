<launch>
    <!-- The planning and execution components of MoveIt! configured to run -->
    <!-- using the ROS-Industrial interface. -->

    <!-- | 		PARAMETERS  		| -->

    <!-- the "sim" argument controls whether we connect to a Simulated or Real robot. -->
    <arg name="sim" default="false" doc="If true, the robot will be simulated in Gazebo" />

    <!-- specify the planning pipeline -->
    <arg name="pipeline" default="ompl" />

    <!-- By default, we do not start a database (it can be large) -->
    <arg name="db" default="false" />
    <!-- Allow user to specify database location -->
    <arg name="db_path" default="$(find qb_hand_moveit_config)/default_warehouse_mongo_db" />

    <!-- By default, we are not in debug mode -->
    <arg name="debug" default="false" />

    <!-- By default, we will load or override the robot_description -->
    <arg name="load_robot_description" default="false"/>

    <!-- Set execution mode for fake execution controllers -->
    <arg name="execution_type" default="interpolate" />

    <!-- Choose whether or not to use gui -->
    <!-- <arg name="use_gui" default="false" /> -->

    <!-- Choose whether or not to use rviz -->
    <arg name="use_rviz" default="true" />

    <!-- The unique robot name -->
    <arg name="robot_namespace" default="qbhand"/>

    <!-- If needed, broadcast static tf for robot root -->


    <!-- We do not have a robot connected, so publish fake joint states -->
    <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" unless="$(arg use_gui)">
    <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
  </node>
  <node name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" if="$(arg use_gui)">
    <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
  </node> -->

    <!-- Given the published joint states, publish tf for the robot links -->
    <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" /> -->

    <group ns="$(arg robot_namespace)" unless="$(arg sim)">
        <!-- Run the main MoveIt! executable without trajectory execution (we do not have controllers configured by default) -->
        <include file="$(find qb_hand_moveit_config)/launch/move_group.launch">
            <arg name="allow_trajectory_execution" value="true"/>
            <arg name="fake_execution" value="false"/>
            <arg name="execution_type" value="$(arg execution_type)"/>
            <arg name="info" value="true"/>
            <arg name="debug" value="$(arg debug)"/>
            <arg name="pipeline" value="$(arg pipeline)"/>
            <arg name="load_robot_description" value="$(arg load_robot_description)"/>
        </include>

        <!-- Run Rviz and load the default config to see the state of the move_group node -->
        <include file="$(find qb_hand_moveit_config)/launch/moveit_rviz.launch" if="$(arg use_rviz)">
            <arg name="rviz_config" value="$(find qb_hand_moveit_config)/launch/moveit.rviz"/>
            <arg name="debug" value="$(arg debug)"/>
        </include>

        <!-- If database loading was enabled, start mongodb as well -->
        <include file="$(find qb_hand_moveit_config)/launch/default_warehouse_db.launch" if="$(arg db)">
            <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
        </include>
    </group>

    <!-- Run the robot within a Gazebo simulation. -->
    <group if="$(arg sim)">
        <!-- TODO -->
    </group>

</launch>
